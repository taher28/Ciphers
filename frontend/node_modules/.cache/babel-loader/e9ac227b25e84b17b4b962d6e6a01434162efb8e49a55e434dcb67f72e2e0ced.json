{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TAHER\\\\Ciphers\\\\frontend\\\\src\\\\components\\\\Vault.jsx\",\n  _s = $RefreshSig$();\n// src/components/Vault.jsx (Updated)\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NoteModal from './NoteModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Vault = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const fetchNotes = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5000/api/notes', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotes(response.data);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveNote = async noteData => {\n    try {\n      const token = localStorage.getItem('token');\n      if (noteData.id) {\n        // Update existing note\n        await axios.put(`http://localhost:5000/api/notes/${noteData.id}`, noteData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      } else {\n        // Create new note\n        await axios.post('http://localhost:5000/api/notes', noteData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      fetchNotes(); // Refresh the list\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error('Error saving note:', error);\n    }\n  };\n  const handleDeleteNote = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`http://localhost:5000/api/notes/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchNotes(); // Refresh the list\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading your notes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"My Vault (\", notes.length, \" notes)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => {\n          setSelectedNote(null);\n          setIsModalOpen(true);\n        },\n        children: \"New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-card add-note-card\",\n        onClick: () => {\n          setSelectedNote(null);\n          setIsModalOpen(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 5V19\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M5 12H19\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add new note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-card\",\n        onClick: () => {\n          setSelectedNote(note);\n          setIsModalOpen(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-date\",\n          children: new Date(note.createdAt).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-content\",\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), note.tags && note.tags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-tags\",\n          children: note.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(NoteModal, {\n      note: selectedNote,\n      onSave: handleSaveNote,\n      onDelete: handleDeleteNote,\n      onClose: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Vault, \"tRNGVph9GTHxMjaHGb6hddaMa7A=\");\n_c = Vault;\nexport default Vault;\nvar _c;\n$RefreshReg$(_c, \"Vault\");","map":{"version":3,"names":["React","useState","useEffect","axios","NoteModal","jsxDEV","_jsxDEV","Vault","_s","notes","setNotes","isModalOpen","setIsModalOpen","selectedNote","setSelectedNote","loading","setLoading","fetchNotes","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleSaveNote","noteData","id","put","post","handleDeleteNote","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","onClick","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","map","note","title","Date","createdAt","toLocaleDateString","year","month","day","content","tags","tag","_id","onSave","onDelete","onClose","_c","$RefreshReg$"],"sources":["C:/Users/TAHER/Ciphers/frontend/src/components/Vault.jsx"],"sourcesContent":["// src/components/Vault.jsx (Updated)\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport NoteModal from './NoteModal';\r\n\r\nconst Vault = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedNote, setSelectedNote] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('http://localhost:5000/api/notes', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setNotes(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching notes:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveNote = async (noteData) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (noteData.id) {\r\n        // Update existing note\r\n        await axios.put(`http://localhost:5000/api/notes/${noteData.id}`, noteData, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n      } else {\r\n        // Create new note\r\n        await axios.post('http://localhost:5000/api/notes', noteData, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n      }\r\n      \r\n      fetchNotes(); // Refresh the list\r\n      setIsModalOpen(false);\r\n    } catch (error) {\r\n      console.error('Error saving note:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteNote = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.delete(`http://localhost:5000/api/notes/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      fetchNotes(); // Refresh the list\r\n      setIsModalOpen(false);\r\n    } catch (error) {\r\n      console.error('Error deleting note:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading your notes...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h1>My Vault ({notes.length} notes)</h1>\r\n        <button className=\"btn btn-primary\" onClick={() => {\r\n          setSelectedNote(null);\r\n          setIsModalOpen(true);\r\n        }}>\r\n          New Note\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"notes-grid\">\r\n        <div className=\"note-card add-note-card\" onClick={() => {\r\n          setSelectedNote(null);\r\n          setIsModalOpen(true);\r\n        }}>\r\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M12 5V19\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n            <path d=\"M5 12H19\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n          </svg>\r\n          <span>Add new note</span>\r\n        </div>\r\n\r\n        {notes.map(note => (\r\n          <div key={note._id} className=\"note-card\" onClick={() => {\r\n            setSelectedNote(note);\r\n            setIsModalOpen(true);\r\n          }}>\r\n            <h3>{note.title}</h3>\r\n            <div className=\"note-date\">\r\n              {new Date(note.createdAt).toLocaleDateString('en-US', { \r\n                year: 'numeric', \r\n                month: 'short', \r\n                day: 'numeric' \r\n              })}\r\n            </div>\r\n            <div className=\"note-content\">\r\n              {note.content}\r\n            </div>\r\n            {note.tags && note.tags.length > 0 && (\r\n              <div className=\"note-tags\">\r\n                {note.tags.map(tag => (\r\n                  <span key={tag} className=\"tag\">{tag}</span>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <NoteModal\r\n          note={selectedNote}\r\n          onSave={handleSaveNote}\r\n          onDelete={handleDeleteNote}\r\n          onClose={() => setIsModalOpen(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vault;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}